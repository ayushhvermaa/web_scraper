{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\sync2\\\\sync\\\\sync-project\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport transcribe from \"./Example\";\nconst fs = require('fs');\nconst axios = require('axios');\n\n/*\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [transcription, setTranscription] = useState('');\r\n\r\n  async function handleFileChange(event) {\r\n    const selectedFile = event.target.files[0];\r\n    if (selectedFile) {\r\n      setFile(selectedFile);\r\n      const formData = new FormData();\r\n      formData.append('file', selectedFile);\r\n      try {\r\n        const response = await fetch('http://localhost:3001/transcribe', {\r\n          method: 'POST',\r\n          body: formData,\r\n        });\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setTranscription(data.transcription);\r\n        } else {\r\n          const data = await response.json();\r\n          console.error(\"Error from server:\", data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error processing file:\", error);\r\n      }\r\n    }\r\n  }\r\n\r\n  function downloadTranscription() {\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([transcription], { type: 'text/plain' });\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = \"transcription.txt\";\r\n    document.body.appendChild(element);\r\n    element.click();\r\n  }\r\n*/\nasync function App() {\n  const file = fs.createReadStream('sample.mp3');\n  const transcript = await transcribe(file);\n  console.log(transcript);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"sync-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Sync\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Example, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  })))));\n}\nexport default App;","map":{"version":3,"names":["React","transcribe","fs","require","axios","App","file","createReadStream","transcript","console","log","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","Example"],"sources":["C:/Users/chris/sync2/sync/sync-project/src/App.js"],"sourcesContent":["import React from 'react'\r\nimport './App.css';\r\nimport transcribe from \"./Example\";\r\nconst fs = require('fs');\r\nconst axios = require('axios');\r\n\r\n\r\n/*\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [transcription, setTranscription] = useState('');\r\n\r\n  async function handleFileChange(event) {\r\n    const selectedFile = event.target.files[0];\r\n    if (selectedFile) {\r\n      setFile(selectedFile);\r\n      const formData = new FormData();\r\n      formData.append('file', selectedFile);\r\n      try {\r\n        const response = await fetch('http://localhost:3001/transcribe', {\r\n          method: 'POST',\r\n          body: formData,\r\n        });\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setTranscription(data.transcription);\r\n        } else {\r\n          const data = await response.json();\r\n          console.error(\"Error from server:\", data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error processing file:\", error);\r\n      }\r\n    }\r\n  }\r\n\r\n  function downloadTranscription() {\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([transcription], { type: 'text/plain' });\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = \"transcription.txt\";\r\n    document.body.appendChild(element);\r\n    element.click();\r\n  }\r\n*/\r\nasync function App() {\r\n\r\n         const file =fs.createReadStream('sample.mp3');\r\n          const transcript = await transcribe(file);\r\n          console.log(transcript);\r\n          return (\r\n            <div className=\"App\">\r\n              <div className=\"center-container\">\r\n                <h1 className=\"sync-title\">Sync</h1>\r\n                <div className=\"search-bar\"> \r\n                  <><Example /></>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n    }\r\n\r\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,WAAW;AAClC,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;;AAG9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeE,GAAGA,CAAA,EAAG;EAEZ,MAAMC,IAAI,GAAEJ,EAAE,CAACK,gBAAgB,CAAC,YAAY,CAAC;EAC5C,MAAMC,UAAU,GAAG,MAAMP,UAAU,CAACK,IAAI,CAAC;EACzCG,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;EACvB,oBACER,KAAA,CAAAW,aAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClBlB,KAAA,CAAAW,aAAA;IAAKC,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/BlB,KAAA,CAAAW,aAAA;IAAIC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,MAAQ,CAAC,eACpClB,KAAA,CAAAW,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzBlB,KAAA,CAAAW,aAAA,CAAAX,KAAA,CAAAmB,QAAA,qBAAEnB,KAAA,CAAAW,aAAA,CAACS,OAAO;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAG,CACZ,CACF,CACF,CAAC;AAEd;AAEJ,eAAeb,GAAG"},"metadata":{},"sourceType":"module"}
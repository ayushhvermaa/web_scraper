{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\sync2\\\\sync\\\\sync-project\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [transcription, setTranscription] = useState('');\n  async function handleFileChange(event) {\n    const selectedFile = event.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      try {\n        const response = await fetch('http://localhost:3001/transcribe', {\n          method: 'POST',\n          body: formData\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setTranscription(data.transcription);\n        } else {\n          const data = await response.json();\n          console.error(\"Error from server:\", data.message);\n        }\n      } catch (error) {\n        console.error(\"Error processing file:\", error);\n      }\n    }\n  }\n  function downloadTranscription() {\n    const element = document.createElement(\"a\");\n    const file = new Blob([transcription], {\n      type: 'text/plain'\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = \"transcription.txt\";\n    document.body.appendChild(element);\n    element.click();\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"sync-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Sync\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".mp3,.mp4\",\n    onChange: handleFileChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), file && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 20\n    }\n  }, \"Selected file: \", file.name), transcription && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: downloadTranscription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, \"Download Transcription\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, transcription)))));\n}\nexport default App;","map":{"version":3,"names":["React","useState","App","file","setFile","transcription","setTranscription","handleFileChange","event","selectedFile","target","files","formData","FormData","append","response","fetch","method","body","ok","data","json","console","error","message","downloadTranscription","element","document","createElement","Blob","type","href","URL","createObjectURL","download","appendChild","click","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","name","onClick"],"sources":["C:/Users/chris/sync2/sync/sync-project/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [transcription, setTranscription] = useState('');\r\n\r\n  async function handleFileChange(event) {\r\n    const selectedFile = event.target.files[0];\r\n    if (selectedFile) {\r\n      setFile(selectedFile);\r\n      const formData = new FormData();\r\n      formData.append('file', selectedFile);\r\n      try {\r\n        const response = await fetch('http://localhost:3001/transcribe', {\r\n          method: 'POST',\r\n          body: formData,\r\n        });\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setTranscription(data.transcription);\r\n        } else {\r\n          const data = await response.json();\r\n          console.error(\"Error from server:\", data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error processing file:\", error);\r\n      }\r\n    }\r\n  }\r\n\r\n  function downloadTranscription() {\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([transcription], { type: 'text/plain' });\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = \"transcription.txt\";\r\n    document.body.appendChild(element);\r\n    element.click();\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"center-container\">\r\n        <h1 className=\"sync-title\">Sync</h1>\r\n        <div className=\"search-bar\">\r\n          <input type=\"file\" accept=\".mp3,.mp4\" onChange={handleFileChange} />\r\n          {file && <p>Selected file: {file.name}</p>}\r\n          {transcription && (\r\n            <div>\r\n              <button onClick={downloadTranscription}>Download Transcription</button>\r\n              <pre>{transcription}</pre>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
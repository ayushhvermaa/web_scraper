{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\sync2\\\\sync\\\\sync-project\\\\src\\\\App.jsx\";\nimport React from 'react';\nimport './App.css';\nimport { Example } from \"./Example\";\n\n/*\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [transcription, setTranscription] = useState('');\r\n\r\n  async function handleFileChange(event) {\r\n    const selectedFile = event.target.files[0];\r\n    if (selectedFile) {\r\n      setFile(selectedFile);\r\n      const formData = new FormData();\r\n      formData.append('file', selectedFile);\r\n      try {\r\n        const response = await fetch('http://localhost:3001/transcribe', {\r\n          method: 'POST',\r\n          body: formData,\r\n        });\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setTranscription(data.transcription);\r\n        } else {\r\n          const data = await response.json();\r\n          console.error(\"Error from server:\", data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error processing file:\", error);\r\n      }\r\n    }\r\n  }\r\n\r\n  function downloadTranscription() {\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([transcription], { type: 'text/plain' });\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = \"transcription.txt\";\r\n    document.body.appendChild(element);\r\n    element.click();\r\n  }\r\n*/\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"sync-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Sync\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Example, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })))));\n}\nexport default App;","map":{"version":3,"names":["React","Example","App","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment"],"sources":["C:/Users/chris/sync2/sync/sync-project/src/App.jsx"],"sourcesContent":["import React from 'react'\r\nimport './App.css';\r\nimport {Example} from \"./Example\";\r\n\r\n/*\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [transcription, setTranscription] = useState('');\r\n\r\n  async function handleFileChange(event) {\r\n    const selectedFile = event.target.files[0];\r\n    if (selectedFile) {\r\n      setFile(selectedFile);\r\n      const formData = new FormData();\r\n      formData.append('file', selectedFile);\r\n      try {\r\n        const response = await fetch('http://localhost:3001/transcribe', {\r\n          method: 'POST',\r\n          body: formData,\r\n        });\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setTranscription(data.transcription);\r\n        } else {\r\n          const data = await response.json();\r\n          console.error(\"Error from server:\", data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error processing file:\", error);\r\n      }\r\n    }\r\n  }\r\n\r\n  function downloadTranscription() {\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([transcription], { type: 'text/plain' });\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = \"transcription.txt\";\r\n    document.body.appendChild(element);\r\n    element.click();\r\n  }\r\n*/\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"center-container\">\r\n        <h1 className=\"sync-title\">Sync</h1>\r\n        <div className=\"search-bar\"> \r\n          <><Example /></>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,SAAQC,OAAO,QAAO,WAAW;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,GAAGA,CAAA,EAAG;EACb,oBACEF,KAAA,CAAAG,aAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClBV,KAAA,CAAAG,aAAA;IAAKC,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/BV,KAAA,CAAAG,aAAA;IAAIC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,MAAQ,CAAC,eACpCV,KAAA,CAAAG,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzBV,KAAA,CAAAG,aAAA,CAAAH,KAAA,CAAAW,QAAA,qBAAEX,KAAA,CAAAG,aAAA,CAACF,OAAO;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAG,CACZ,CACF,CACF,CAAC;AAEV;AAEA,eAAeR,GAAG"},"metadata":{},"sourceType":"module"}